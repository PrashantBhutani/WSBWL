.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Yahoo::Search::Request 3pm"
.TH Yahoo::Search::Request 3pm "2010-06-15" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.SH "VERSION"
.IX Header "VERSION"
version 1.11.3
Yahoo::Search::Request \*(-- Container object for a Yahoo! Search request.
(This package is included in, and automatically loaded by, the Yahoo::Search package.)
.SH "Package Use"
.IX Header "Package Use"
You never need to \f(CW\*(C`use\*(C'\fR this package directly \*(-- it is loaded
automatically by Yahoo::Search.
.SH "Object Creation"
.IX Header "Object Creation"
In practice, this class is generally not dealt with explicitly, but rather
implicitly via functions in Yahoo::Search such as \f(CW\*(C`Query\*(C'\fR and \f(CW\*(C`Links\*(C'\fR,
which build and use a \f(CW\*(C`Request\*(C'\fR object under the hood.
.PP
You also have access to the \f(CW\*(C`Request\*(C'\fR object via \f(CW\*(C`Request()\*(C'\fR method of
resulting \f(CW\*(C`Response\*(C'\fR and \f(CW\*(C`Result\*(C'\fR objects.
.PP
To be clear, \f(CW\*(C`Request\*(C'\fR objects are created by the \f(CW\*(C`Request()\*(C'\fR method of a
Search Engine object (Yahoo::Search).
.SH "Methods"
.IX Header "Methods"
A \f(CW\*(C`Request\*(C'\fR object provides the following methods:
.ie n .IP "$Request\->Uri" 4
.el .IP "\f(CW$Request\fR\->Uri" 4
.IX Item "$Request->Uri"
Returns the URI::http object representing the url fetched (or to be
fetched) from Yahoo's Search servers. The url is actually fetched when the
\&\f(CW\*(C`Request\*(C'\fR object's \f(CW\*(C`Fetch()\*(C'\fR method is called.
.Sp
Note that this does \fInot\fR reflect the fact that a request is changed to a
\&\s-1POST\s0 when request is sufficiently large. Thus, there are times when the url
represented by the URI::http object returned is not actually fetchable from
the Yahoo! servers.
.ie n .IP "$Request\->Url" 4
.el .IP "\f(CW$Request\fR\->Url" 4
.IX Item "$Request->Url"
Like the \f(CW\*(C`Uri\*(C'\fR method, but returns a string with the full url
fetched (or to be fetched).
.Sp
Note that this does \fInot\fR reflect the fact that a request is changed to a
\&\s-1POST\s0 when request is sufficiently large. Thus, there are times when the url
returned is not actually fetchable from the Yahoo! servers.
.ie n .IP "$Request\->SearchSpace" 4
.el .IP "\f(CW$Request\fR\->SearchSpace" 4
.IX Item "$Request->SearchSpace"
Returns the search space the request represents (\fIDoc\fR, \fIImage\fR, etc.)
.ie n .IP "$Request\->SearchEngine" 4
.el .IP "\f(CW$Request\fR\->SearchEngine" 4
.IX Item "$Request->SearchEngine"
Returns the Yahoo::Search \*(L"search engine\*(R" object used in creating this
request.
.ie n .IP "$Request\->Fetch" 4
.el .IP "\f(CW$Request\fR\->Fetch" 4
.IX Item "$Request->Fetch"
Actually contact the Yahoo Search servers, returning a \f(CW\*(C`Result\*(C'\fR
(Yahoo::Search::Result) object.
.ie n .IP "$Request\->RelatedRequest" 4
.el .IP "\f(CW$Request\fR\->RelatedRequest" 4
.IX Item "$Request->RelatedRequest"
.PD 0
.ie n .IP "$Request\->RelatedResponse" 4
.el .IP "\f(CW$Request\fR\->RelatedResponse" 4
.IX Item "$Request->RelatedResponse"
.PD
Perform a \fIRelated\fR request for search terms related to the query phrase
of the current request, returning the new \f(CW\*(C`Request\*(C'\fR or \f(CW\*(C`Response\*(C'\fR object,
respectively.
.Sp
Both return nothing if the current request is already for a \fIRelated\fR
search.
.ie n .IP "$Request\->SpellRequest" 4
.el .IP "\f(CW$Request\fR\->SpellRequest" 4
.IX Item "$Request->SpellRequest"
.PD 0
.ie n .IP "$Request\->SpellResponse" 4
.el .IP "\f(CW$Request\fR\->SpellResponse" 4
.IX Item "$Request->SpellResponse"
.PD
Perform a \fISpell\fR request for a search term that may reflect proper
spelling of the query phrase of the current request, returning the new
\&\f(CW\*(C`Request\*(C'\fR or \f(CW\*(C`Response\*(C'\fR object, respectively.
.Sp
Both return nothing if the current request is already for a \fISpell\fR
search.
.SH "Author"
.IX Header "Author"
Jeffrey Friedl (jfriedl@yahoo.com)
